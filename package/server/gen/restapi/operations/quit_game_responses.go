// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// QuitGameOKCode is the HTTP code returned for type QuitGameOK
const QuitGameOKCode int = 200

/*QuitGameOK The game was stopped successfully

swagger:response quitGameOK
*/
type QuitGameOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQuitGameOK creates QuitGameOK with default headers values
func NewQuitGameOK() *QuitGameOK {

	return &QuitGameOK{}
}

// WithPayload adds the payload to the quit game o k response
func (o *QuitGameOK) WithPayload(payload string) *QuitGameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quit game o k response
func (o *QuitGameOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuitGameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*QuitGameDefault Unknown Error

swagger:response quitGameDefault
*/
type QuitGameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQuitGameDefault creates QuitGameDefault with default headers values
func NewQuitGameDefault(code int) *QuitGameDefault {
	if code <= 0 {
		code = 500
	}

	return &QuitGameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the quit game default response
func (o *QuitGameDefault) WithStatusCode(code int) *QuitGameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the quit game default response
func (o *QuitGameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the quit game default response
func (o *QuitGameDefault) WithPayload(payload string) *QuitGameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quit game default response
func (o *QuitGameDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuitGameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
